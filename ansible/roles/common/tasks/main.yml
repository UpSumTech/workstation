---
# These tasks set up some common binaries needed to work with

- name: Get rid of dot local cause it messes python2.7 up in ubuntu
  shell: test -d /home/developer/.local && rm -rf /home/developer/.local
  args:
    executable: /bin/bash
  ignore_errors: yes

- file: state=directory
    dest=/home/developer/bin
    owner=developer
    group=developer

- file: state=directory
    dest=/home/developer/tmp
    owner=developer
    group=developer

- file: state=directory
    dest=/home/developer/share
    owner=developer
    group=developer

- name: Add bashrc
  copy: src=bashrc
    dest=/home/developer/.bashrc
    owner=developer
    group=developer
    mode=644
  register: custom_bashrc_added

- name: Add utilities to your shell
  copy: src=bash_utils.sh
    dest=/home/developer/.bash_utils.sh
    owner=developer
    group=developer
    mode=775
  register: custom_bash_utils_added

- name: Update bashrc to source the custom bash util fns
  shell: echo '[[ -f $HOME/.bash_utils.sh ]] && . $HOME/.bash_utils.sh' >> /home/developer/.bashrc
  when: custom_bashrc_added|success and custom_bash_utils_added | success

- name: Add env_vars file to your home dir
  copy: src=env_vars.sh
    dest=/home/developer/.env_vars.sh
    owner=developer
    group=developer
  register: custom_env_vars_added

- name: Add extra line to profile file
  shell: echo '[[ -f $HOME/.env_vars.sh ]] && . $HOME/.env_vars.sh' >> /home/developer/.bashrc
  when: custom_bashrc_added|success and custom_env_vars_added|success

- name: Install apt packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    install_recommends: no
  with_items:
    - curl
    - git
    - wget
    - git-extras
    - unzip
    - libffi-dev
    - libpq-dev
    - libsqlite3-dev
    - libssl-dev
    - libbz2-dev
    - libcurl4-openssl-dev
    - libexpat-dev
    - libncurses-dev
    - libexpat-dev
    - zlib1g-dev
    - python-dev
    - python3-dev
    - ruby-dev
    - nodejs-dev
    - gettext
    - libyaml-dev
    - libreadline-dev
    - linux-libc-dev
    - libjpeg-dev
    - libfreetype6
    - libfreetype6-dev
    - build-essential
    - sqlite
    - tcl
    - xclip
    - m4
    - gcc
    - cmake
    - scons
    - autoconf
    - automake
    - autoconf-archive
    - libtool
    - patch
    - openssl
    - flex
    - bison
    - python-pip
    - python
    - perl
    - ruby
    - nodejs
    - golang
    - default-jdk
    - lua5.1
    - luajit
    - binutils
    - coreutils
    - moreutils
    - npm
    - tmux
    - dconf-cli
  become: true
  become_user: root

- name: Install version managers for langs
  shell: >
    { [[ ! -d "/home/developer/.pyenv" ]] && (git clone https://github.com/pyenv/pyenv.git /home/developer/.pyenv && git clone https://github.com/pyenv/pyenv-virtualenv.git /home/developer/.pyenv/plugins/pyenv-virtualenv && git clone https://github.com/pyenv/pyenv-virtualenvwrapper.git /home/developer/.pyenv/plugins/pyenv-virtualenvwrapper); } &&
    { [[ ! -d "/home/developer/.rbenv" ]] && (git clone https://github.com/rbenv/rbenv.git /home/developer/.rbenv && git clone https://github.com/rbenv/ruby-build.git /home/developer/.rbenv/plugins/ruby-build); } &&
    { [[ ! -d "/home/developer/.nvm" ]] && (git clone https://github.com/creationix/nvm.git /home/developer/.nvm); } &&
    { [[ ! -d "/home/developer/.jenv" ]] && (git clone https://github.com/gcuisinier/jenv.git /home/developer/.jenv); } &&
    { [[ ! -d "/home/developer/.goenv" ]] && (git clone https://github.com/syndbg/goenv.git /home/developer/.goenv); } ||
    echo 'language version managers already exist'

- name: Install tools using pip
  shell: . "/home/developer/.bashrc" && pip install "{{ item }}"
  with_items:
    - credstash
    - autoenv
  args:
    executable: /bin/bash

- name: Install python2 version
  shell: . "/home/developer/.bashrc" && { pyenv versions | grep '2.7.14' || pyenv install 2.7.14; }
  args:
    executable: /bin/bash

- name: Install python3 version
  shell: . "/home/developer/.bashrc" && { pyenv versions | grep '3.4.4' || pyenv install 3.4.4; }
  args:
    executable: /bin/bash

- name: Set global python version
  shell: . "/home/developer/.bashrc" && pyenv global 2.7.14 3.4.4
  args:
    executable: /bin/bash

- name: Install ruby version
  shell: . "/home/developer/.bashrc" && { rbenv versions | grep '2.4.0' || rbenv install 2.4.0; } && rbenv global 2.4.0
  args:
    executable: /bin/bash

- name: Install node version
  shell: . "/home/developer/.bashrc" && { nvm ls | grep 'v8.9.3' || nvm install 8.9.3; } && nvm alias default 8.9.3
  args:
    executable: /bin/bash

- name: Install golang version
  shell: . "/home/developer/.bashrc" && { goenv versions | grep '1.9.2' || goenv install 1.9.2; } && goenv global 1.9.2
  args:
    executable: /bin/bash
