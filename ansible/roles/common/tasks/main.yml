---
# These tasks set up some common binaries needed to work with

- name: Install apt packages
  apt:
    name: "{{ item }}"
    state: present
    update_cache: yes
    install_recommends: no
  with_items:
    - curl
    - git
    - unzip
    - libffi-dev
    - libpq-dev
    - libsqlite3-dev
    - libssl-dev
    - libbz2-dev
    - libcurl4-openssl-dev
    - libexpat-dev
    - libncurses-dev
    - libexpat-dev
    - zlib1g-dev
    - python-dev
    - python3-dev
    - libjpeg-dev
    - libfreetype6
    - libfreetype6-dev
    - build-essential
    - xclip
    - m4
    - gcc
    - cmake
    - scons
    - autoconf
    - automake
    - autoconf-archive
    - libtool
    - flex
    - bison
    - python-pip
    - python
    - perl
    - ruby
    - nodejs
    - default-jdk
    - lua5.1
    - luajit
    - binutils
    - coreutils
    - moreutils
    - npm
  become: true
  become_user: root

- pip:
    name: credstash
  become: true
  become_user: root

- pip:
    name: autoenv
  become: true
  become_user: root

- name: Install package managers for languages
  shell: >
    rm -rf /home/developer/.pyenv &&
    git clone https://github.com/pyenv/pyenv.git /home/developer/.pyenv &&
    git clone https://github.com/pyenv/pyenv-virtualenv.git /home/developer/.pyenv/plugins/pyenv-virtualenv &&
    rm -rf /home/developer/.rbenv &&
    git clone https://github.com/rbenv/rbenv.git /home/developer/.rbenv &&
    rm -rf /home/developer/.nvm &&
    git clone https://github.com/creationix/nvm.git /home/developer/.nvm &&
    rm -rf /home/developer/.jenv &&
    git clone https://github.com/gcuisinier/jenv.git /home/developer/.jenv &&
    curl -sSL https://raw.githubusercontent.com/moovweb/gvm/master/binscripts/gvm-installer | bash &&
    echo "source `which activate.sh`" >> /home/developer/.bashrc &&
    echo 'export PYENV_ROOT="$HOME/.pyenv"' >> /home/developer/.bashrc &&
    echo 'export PATH="$PYENV_ROOT/bin:$PATH"' >> /home/developer/.bashrc &&
    echo 'eval "$(pyenv init -)"' >> /home/developer/.bashrc &&
    echo 'eval "$(pyenv virtualenv-init -)"' >> /home/developer/.bashrc &&
    echo 'export PATH="$HOME/.rbenv/bin:$PATH"' >> /home/developer/.bashrc &&
    echo 'export NVM_DIR="$HOME/.nvm"' >> /home/developer/.bashrc &&
    echo '[ -s "$NVM_DIR/nvm.sh" ] && . "$NVM_DIR/nvm.sh"' >> /home/developer/.bashrc &&
    echo '[ -s "$NVM_DIR/bash_completion" ] && . "$NVM_DIR/bash_completion"' >> /home/developer/.bashrc &&
    echo 'export PATH="$HOME/.jenv/bin:$PATH"' >> /home/developer/.bashrc &&
    echo 'eval "$(jenv init -)"' >> /home/developer/.bashrc

- name: Add docker startup utility to your shell
  copy: src=bash_utils.sh
    dest=/home/developer/.bash_utils.sh
    owner=developer
    group=developer
    mode=662
  register: custom_bash_utils_added

- name: Update bashrc to source the custom bash util fns
  shell: echo 'if [[ -f ~/.bash_utils.sh ]]; then source ~/.bash_utils.sh; fi' >> /home/developer/.bash_profile
  when: custom_bash_utils_added | success

- file: state=directory
    dest=/home/developer/bin
    owner=developer
    group=developer

- name: Add extra line to profile file
  shell: echo ". $HOME/.env_vars" >> $HOME/.profile

- name: Add env_vars file to your home dir
  copy: src=env_vars
    dest=/home/developer/.env_vars
    owner=developer
    group=developer
    mode=644
